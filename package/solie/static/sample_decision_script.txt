import math
from datetime import datetime, timedelta, timezone

acquire_ratio = 0.8 / len(target_symbols)  # Split asset by symbol count
wallet_balance = account_state["wallet_balance"]

for symbol in target_symbols:

    current_price = current_candle_data[str((symbol, "Close"))]

    indicator_key = str((symbol, "Price", "SMA One (#00BBFF)"))
    price_sma_one = current_indicators[indicator_key]
    indicator_key = str((symbol, "Price", "SMA Two (#FF6666)"))
    price_sma_two = current_indicators[indicator_key]

    position_direction = account_state["positions"][symbol]["direction"]
    position_margin = account_state["positions"][symbol]["margin"]

    scribbles["remember_data"] = True  # Remember something
    remember_data = scribbles.get("remember_data", False)  # Get it later

    if position_direction == "none":
        if price_sma_one > price_sma_two:
            decision[symbol]["now_buy"] = {
                "margin": acquire_ratio * wallet_balance,
            }
        elif price_sma_one < price_sma_two:
            decision[symbol]["now_sell"] = {
                "margin": acquire_ratio * wallet_balance,
            }

    elif position_direction == "long":
        if price_sma_one < price_sma_two:
            decision[symbol]["now_sell"] = {
                "margin":
                position_margin + acquire_ratio * wallet_balance,  # Flip
            }

    elif position_direction == "short":
        if price_sma_one > price_sma_two:
            decision[symbol]["now_buy"] = {
                "margin":
                position_margin + acquire_ratio * wallet_balance,  # Flip
            }
